// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id              Int    @id @default(autoincrement())
  userPhoneNumber String @unique
  password        String
  roleId          Int
  status          String

  userRole Role @relation(fields: [roleId], references: [id])
  user     User @relation(fields: [userPhoneNumber], references: [phoneNumber])
}

model Role {
  id   Int    @id @default(autoincrement())
  name String

  accounts Account[]
}

model User {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  address     String
  phoneNumber String   @unique
  gender      String
  dateOfBirth DateTime
  image       String?
  email       String   @unique

  account      Account?
  UserActivity UserActivity[]
  UserSearchHistory UserSearchHistory[]
}

model UserActivity {
  id           Int      @id @default(autoincrement())
  userId       Int
  categoryId   Int
  productId    Int?
  activityType String
  createdAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@index([userId, categoryId])
  @@index([categoryId, createdAt])
}

model UserSearchHistory {
  id          Int      @id @default(autoincrement())
  userId      Int
  searchQuery String
  categoryId  Int?
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt])
  @@index([categoryId, createdAt])
}
